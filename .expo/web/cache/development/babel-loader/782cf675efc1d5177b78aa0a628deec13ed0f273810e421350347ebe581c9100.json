{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar Blob = require(\"./Blob\");\nvar EventTarget = require('event-target-shim');\nimport NativeFileReaderModule from \"./NativeFileReaderModule\";\nvar READER_EVENTS = ['abort', 'error', 'load', 'loadstart', 'loadend', 'progress'];\nvar EMPTY = 0;\nvar LOADING = 1;\nvar DONE = 2;\nvar FileReader = function (_ref) {\n  _inherits(FileReader, _ref);\n  var _super = _createSuper(FileReader);\n  function FileReader() {\n    var _this;\n    _classCallCheck(this, FileReader);\n    _this = _super.call(this);\n    _this.EMPTY = EMPTY;\n    _this.LOADING = LOADING;\n    _this.DONE = DONE;\n    _this._aborted = false;\n    _this._subscriptions = [];\n    _this._reset();\n    return _this;\n  }\n  _createClass(FileReader, [{\n    key: \"_reset\",\n    value: function _reset() {\n      this._readyState = EMPTY;\n      this._error = null;\n      this._result = null;\n    }\n  }, {\n    key: \"_clearSubscriptions\",\n    value: function _clearSubscriptions() {\n      this._subscriptions.forEach(function (sub) {\n        return sub.remove();\n      });\n      this._subscriptions = [];\n    }\n  }, {\n    key: \"_setReadyState\",\n    value: function _setReadyState(newState) {\n      this._readyState = newState;\n      this.dispatchEvent({\n        type: 'readystatechange'\n      });\n      if (newState === DONE) {\n        if (this._aborted) {\n          this.dispatchEvent({\n            type: 'abort'\n          });\n        } else if (this._error) {\n          this.dispatchEvent({\n            type: 'error'\n          });\n        } else {\n          this.dispatchEvent({\n            type: 'load'\n          });\n        }\n        this.dispatchEvent({\n          type: 'loadend'\n        });\n      }\n    }\n  }, {\n    key: \"readAsArrayBuffer\",\n    value: function readAsArrayBuffer() {\n      throw new Error('FileReader.readAsArrayBuffer is not implemented');\n    }\n  }, {\n    key: \"readAsDataURL\",\n    value: function readAsDataURL(blob) {\n      var _this2 = this;\n      this._aborted = false;\n      if (blob == null) {\n        throw new TypeError(\"Failed to execute 'readAsDataURL' on 'FileReader': parameter 1 is not of type 'Blob'\");\n      }\n      NativeFileReaderModule.readAsDataURL(blob.data).then(function (text) {\n        if (_this2._aborted) {\n          return;\n        }\n        _this2._result = text;\n        _this2._setReadyState(DONE);\n      }, function (error) {\n        if (_this2._aborted) {\n          return;\n        }\n        _this2._error = error;\n        _this2._setReadyState(DONE);\n      });\n    }\n  }, {\n    key: \"readAsText\",\n    value: function readAsText(blob) {\n      var _this3 = this;\n      var encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'UTF-8';\n      this._aborted = false;\n      if (blob == null) {\n        throw new TypeError(\"Failed to execute 'readAsText' on 'FileReader': parameter 1 is not of type 'Blob'\");\n      }\n      NativeFileReaderModule.readAsText(blob.data, encoding).then(function (text) {\n        if (_this3._aborted) {\n          return;\n        }\n        _this3._result = text;\n        _this3._setReadyState(DONE);\n      }, function (error) {\n        if (_this3._aborted) {\n          return;\n        }\n        _this3._error = error;\n        _this3._setReadyState(DONE);\n      });\n    }\n  }, {\n    key: \"abort\",\n    value: function abort() {\n      this._aborted = true;\n      if (this._readyState !== EMPTY && this._readyState !== DONE) {\n        this._reset();\n        this._setReadyState(DONE);\n      }\n      this._reset();\n    }\n  }, {\n    key: \"readyState\",\n    get: function get() {\n      return this._readyState;\n    }\n  }, {\n    key: \"error\",\n    get: function get() {\n      return this._error;\n    }\n  }, {\n    key: \"result\",\n    get: function get() {\n      return this._result;\n    }\n  }]);\n  return FileReader;\n}(EventTarget.apply(void 0, READER_EVENTS));\nFileReader.EMPTY = EMPTY;\nFileReader.LOADING = LOADING;\nFileReader.DONE = DONE;\nmodule.exports = FileReader;","map":{"version":3,"names":["_classCallCheck","_createClass","_inherits","_possibleConstructorReturn","_getPrototypeOf","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","Blob","require","EventTarget","NativeFileReaderModule","READER_EVENTS","EMPTY","LOADING","DONE","FileReader","_ref","_super","_this","_aborted","_subscriptions","_reset","key","value","_readyState","_error","_result","_clearSubscriptions","forEach","sub","remove","_setReadyState","newState","dispatchEvent","type","readAsArrayBuffer","Error","readAsDataURL","blob","_this2","TypeError","data","then","text","error","readAsText","_this3","encoding","length","undefined","abort","get","module","exports"],"sources":["D:/React-Native/Pharma/node_modules/react-native/Libraries/Blob/FileReader.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst Blob = require('./Blob');\nconst EventTarget = require('event-target-shim');\n\nimport NativeFileReaderModule from './NativeFileReaderModule';\n\ntype ReadyState =\n  | 0 // EMPTY\n  | 1 // LOADING\n  | 2; // DONE\n\ntype ReaderResult = string | ArrayBuffer;\n\nconst READER_EVENTS = [\n  'abort',\n  'error',\n  'load',\n  'loadstart',\n  'loadend',\n  'progress',\n];\n\nconst EMPTY = 0;\nconst LOADING = 1;\nconst DONE = 2;\n\nclass FileReader extends (EventTarget(...READER_EVENTS): any) {\n  static EMPTY: number = EMPTY;\n  static LOADING: number = LOADING;\n  static DONE: number = DONE;\n\n  EMPTY: number = EMPTY;\n  LOADING: number = LOADING;\n  DONE: number = DONE;\n\n  _readyState: ReadyState;\n  _error: ?Error;\n  _result: ?ReaderResult;\n  _aborted: boolean = false;\n  _subscriptions: Array<*> = [];\n\n  constructor() {\n    super();\n    this._reset();\n  }\n\n  _reset(): void {\n    this._readyState = EMPTY;\n    this._error = null;\n    this._result = null;\n  }\n\n  _clearSubscriptions(): void {\n    this._subscriptions.forEach(sub => sub.remove());\n    this._subscriptions = [];\n  }\n\n  _setReadyState(newState: ReadyState) {\n    this._readyState = newState;\n    this.dispatchEvent({type: 'readystatechange'});\n    if (newState === DONE) {\n      if (this._aborted) {\n        this.dispatchEvent({type: 'abort'});\n      } else if (this._error) {\n        this.dispatchEvent({type: 'error'});\n      } else {\n        this.dispatchEvent({type: 'load'});\n      }\n      this.dispatchEvent({type: 'loadend'});\n    }\n  }\n\n  readAsArrayBuffer() {\n    throw new Error('FileReader.readAsArrayBuffer is not implemented');\n  }\n\n  readAsDataURL(blob: ?Blob) {\n    this._aborted = false;\n\n    if (blob == null) {\n      throw new TypeError(\n        \"Failed to execute 'readAsDataURL' on 'FileReader': parameter 1 is not of type 'Blob'\",\n      );\n    }\n\n    NativeFileReaderModule.readAsDataURL(blob.data).then(\n      (text: string) => {\n        if (this._aborted) {\n          return;\n        }\n        this._result = text;\n        this._setReadyState(DONE);\n      },\n      error => {\n        if (this._aborted) {\n          return;\n        }\n        this._error = error;\n        this._setReadyState(DONE);\n      },\n    );\n  }\n\n  readAsText(blob: ?Blob, encoding: string = 'UTF-8') {\n    this._aborted = false;\n\n    if (blob == null) {\n      throw new TypeError(\n        \"Failed to execute 'readAsText' on 'FileReader': parameter 1 is not of type 'Blob'\",\n      );\n    }\n\n    NativeFileReaderModule.readAsText(blob.data, encoding).then(\n      (text: string) => {\n        if (this._aborted) {\n          return;\n        }\n        this._result = text;\n        this._setReadyState(DONE);\n      },\n      error => {\n        if (this._aborted) {\n          return;\n        }\n        this._error = error;\n        this._setReadyState(DONE);\n      },\n    );\n  }\n\n  abort() {\n    this._aborted = true;\n    // only call onreadystatechange if there is something to abort, as per spec\n    if (this._readyState !== EMPTY && this._readyState !== DONE) {\n      this._reset();\n      this._setReadyState(DONE);\n    }\n    // Reset again after, in case modified in handler\n    this._reset();\n  }\n\n  get readyState(): ReadyState {\n    return this._readyState;\n  }\n\n  get error(): ?Error {\n    return this._error;\n  }\n\n  get result(): ?ReaderResult {\n    return this._result;\n  }\n}\n\nmodule.exports = FileReader;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}