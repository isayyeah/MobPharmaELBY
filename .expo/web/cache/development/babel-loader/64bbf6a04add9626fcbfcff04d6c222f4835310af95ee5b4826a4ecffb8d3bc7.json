{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _get = require(\"@babel/runtime/helpers/get\");\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar EventEmitter = require(\"../vendor/emitter/EventEmitter\");\nvar Platform = require(\"../Utilities/Platform\");\nvar RCTDeviceEventEmitter = require(\"./RCTDeviceEventEmitter\");\nvar invariant = require('invariant');\nvar NativeEventEmitter = function (_EventEmitter) {\n  _inherits(NativeEventEmitter, _EventEmitter);\n  var _super = _createSuper(NativeEventEmitter);\n  function NativeEventEmitter(nativeModule) {\n    var _this;\n    _classCallCheck(this, NativeEventEmitter);\n    _this = _super.call(this, RCTDeviceEventEmitter.sharedSubscriber);\n    if (Platform.OS === 'ios') {\n      invariant(nativeModule, 'Native module cannot be null.');\n      _this._nativeModule = nativeModule;\n    }\n    return _this;\n  }\n  _createClass(NativeEventEmitter, [{\n    key: \"addListener\",\n    value: function addListener(eventType, listener, context) {\n      if (this._nativeModule != null) {\n        this._nativeModule.addListener(eventType);\n      }\n      return _get(_getPrototypeOf(NativeEventEmitter.prototype), \"addListener\", this).call(this, eventType, listener, context);\n    }\n  }, {\n    key: \"removeAllListeners\",\n    value: function removeAllListeners(eventType) {\n      invariant(eventType, 'eventType argument is required.');\n      var count = this.listeners(eventType).length;\n      if (this._nativeModule != null) {\n        this._nativeModule.removeListeners(count);\n      }\n      _get(_getPrototypeOf(NativeEventEmitter.prototype), \"removeAllListeners\", this).call(this, eventType);\n    }\n  }, {\n    key: \"removeSubscription\",\n    value: function removeSubscription(subscription) {\n      if (this._nativeModule != null) {\n        this._nativeModule.removeListeners(1);\n      }\n      _get(_getPrototypeOf(NativeEventEmitter.prototype), \"removeSubscription\", this).call(this, subscription);\n    }\n  }]);\n  return NativeEventEmitter;\n}(EventEmitter);\nmodule.exports = NativeEventEmitter;","map":{"version":3,"names":["_classCallCheck","require","_createClass","_get","_inherits","_possibleConstructorReturn","_getPrototypeOf","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","EventEmitter","Platform","RCTDeviceEventEmitter","invariant","NativeEventEmitter","_EventEmitter","_super","nativeModule","_this","sharedSubscriber","OS","_nativeModule","key","value","addListener","eventType","listener","context","removeAllListeners","count","listeners","length","removeListeners","removeSubscription","subscription","module","exports"],"sources":["D:/React-Native/Pharma/node_modules/react-native/Libraries/EventEmitter/NativeEventEmitter.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst EventEmitter = require('../vendor/emitter/EventEmitter');\nconst Platform = require('../Utilities/Platform');\nconst RCTDeviceEventEmitter = require('./RCTDeviceEventEmitter');\n\nconst invariant = require('invariant');\n\nimport type EmitterSubscription from '../vendor/emitter/EmitterSubscription';\n\ntype NativeModule = {\n  +addListener: (eventType: string) => void,\n  +removeListeners: (count: number) => void,\n  ...\n};\n\n/**\n * Abstract base class for implementing event-emitting modules. This implements\n * a subset of the standard EventEmitter node module API.\n */\nclass NativeEventEmitter extends EventEmitter {\n  _nativeModule: ?NativeModule;\n\n  constructor(nativeModule: ?NativeModule) {\n    super(RCTDeviceEventEmitter.sharedSubscriber);\n    if (Platform.OS === 'ios') {\n      invariant(nativeModule, 'Native module cannot be null.');\n      this._nativeModule = nativeModule;\n    }\n  }\n\n  addListener(\n    eventType: string,\n    listener: Function,\n    context: ?Object,\n  ): EmitterSubscription {\n    if (this._nativeModule != null) {\n      this._nativeModule.addListener(eventType);\n    }\n    return super.addListener(eventType, listener, context);\n  }\n\n  removeAllListeners(eventType: string) {\n    invariant(eventType, 'eventType argument is required.');\n    const count = this.listeners(eventType).length;\n    if (this._nativeModule != null) {\n      this._nativeModule.removeListeners(count);\n    }\n    super.removeAllListeners(eventType);\n  }\n\n  removeSubscription(subscription: EmitterSubscription) {\n    if (this._nativeModule != null) {\n      this._nativeModule.removeListeners(1);\n    }\n    super.removeSubscription(subscription);\n  }\n}\n\nmodule.exports = NativeEventEmitter;\n"],"mappings":"AAUA,YAAY;;AAAC,IAAAA,eAAA,GAAAC,OAAA;AAAA,IAAAC,YAAA,GAAAD,OAAA;AAAA,IAAAE,IAAA,GAAAF,OAAA;AAAA,IAAAG,SAAA,GAAAH,OAAA;AAAA,IAAAI,0BAAA,GAAAJ,OAAA;AAAA,IAAAK,eAAA,GAAAL,OAAA;AAAA,SAAAM,aAAAC,OAAA,QAAAC,yBAAA,GAAAC,yBAAA,oBAAAC,qBAAA,QAAAC,KAAA,GAAAN,eAAA,CAAAE,OAAA,GAAAK,MAAA,MAAAJ,yBAAA,QAAAK,SAAA,GAAAR,eAAA,OAAAS,WAAA,EAAAF,MAAA,GAAAG,OAAA,CAAAC,SAAA,CAAAL,KAAA,EAAAM,SAAA,EAAAJ,SAAA,YAAAD,MAAA,GAAAD,KAAA,CAAAO,KAAA,OAAAD,SAAA,YAAAb,0BAAA,OAAAQ,MAAA;AAAA,SAAAH,0BAAA,eAAAM,OAAA,qBAAAA,OAAA,CAAAC,SAAA,oBAAAD,OAAA,CAAAC,SAAA,CAAAG,IAAA,2BAAAC,KAAA,oCAAAC,OAAA,CAAAC,SAAA,CAAAC,OAAA,CAAAC,IAAA,CAAAT,OAAA,CAAAC,SAAA,CAAAK,OAAA,8CAAAI,CAAA;AAEb,IAAMC,YAAY,GAAG1B,OAAO,iCAAiC,CAAC;AAC9D,IAAM2B,QAAQ,GAAG3B,OAAO,wBAAwB,CAAC;AACjD,IAAM4B,qBAAqB,GAAG5B,OAAO,0BAA0B,CAAC;AAEhE,IAAM6B,SAAS,GAAG7B,OAAO,CAAC,WAAW,CAAC;AAAC,IAcjC8B,kBAAkB,aAAAC,aAAA;EAAA5B,SAAA,CAAA2B,kBAAA,EAAAC,aAAA;EAAA,IAAAC,MAAA,GAAA1B,YAAA,CAAAwB,kBAAA;EAGtB,SAAAA,mBAAYG,YAA2B,EAAE;IAAA,IAAAC,KAAA;IAAAnC,eAAA,OAAA+B,kBAAA;IACvCI,KAAA,GAAAF,MAAA,CAAAR,IAAA,OAAMI,qBAAqB,CAACO,gBAAgB;IAC5C,IAAIR,QAAQ,CAACS,EAAE,KAAK,KAAK,EAAE;MACzBP,SAAS,CAACI,YAAY,EAAE,+BAA+B,CAAC;MACxDC,KAAA,CAAKG,aAAa,GAAGJ,YAAY;IACnC;IAAC,OAAAC,KAAA;EACH;EAACjC,YAAA,CAAA6B,kBAAA;IAAAQ,GAAA;IAAAC,KAAA,EAED,SAAAC,YACEC,SAAiB,EACjBC,QAAkB,EAClBC,OAAgB,EACK;MACrB,IAAI,IAAI,CAACN,aAAa,IAAI,IAAI,EAAE;QAC9B,IAAI,CAACA,aAAa,CAACG,WAAW,CAACC,SAAS,CAAC;MAC3C;MACA,OAAAvC,IAAA,CAAAG,eAAA,CAAAyB,kBAAA,CAAAR,SAAA,wBAAAE,IAAA,OAAyBiB,SAAS,EAAEC,QAAQ,EAAEC,OAAO;IACvD;EAAC;IAAAL,GAAA;IAAAC,KAAA,EAED,SAAAK,mBAAmBH,SAAiB,EAAE;MACpCZ,SAAS,CAACY,SAAS,EAAE,iCAAiC,CAAC;MACvD,IAAMI,KAAK,GAAG,IAAI,CAACC,SAAS,CAACL,SAAS,CAAC,CAACM,MAAM;MAC9C,IAAI,IAAI,CAACV,aAAa,IAAI,IAAI,EAAE;QAC9B,IAAI,CAACA,aAAa,CAACW,eAAe,CAACH,KAAK,CAAC;MAC3C;MACA3C,IAAA,CAAAG,eAAA,CAAAyB,kBAAA,CAAAR,SAAA,+BAAAE,IAAA,OAAyBiB,SAAS;IACpC;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAU,mBAAmBC,YAAiC,EAAE;MACpD,IAAI,IAAI,CAACb,aAAa,IAAI,IAAI,EAAE;QAC9B,IAAI,CAACA,aAAa,CAACW,eAAe,CAAC,CAAC,CAAC;MACvC;MACA9C,IAAA,CAAAG,eAAA,CAAAyB,kBAAA,CAAAR,SAAA,+BAAAE,IAAA,OAAyB0B,YAAY;IACvC;EAAC;EAAA,OAAApB,kBAAA;AAAA,EApC8BJ,YAAY;AAuC7CyB,MAAM,CAACC,OAAO,GAAGtB,kBAAkB"},"metadata":{},"sourceType":"script","externalDependencies":[]}