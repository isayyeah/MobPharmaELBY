{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar EventSubscription = require(\"./EventSubscription\");\nvar EmitterSubscription = function (_EventSubscription) {\n  _inherits(EmitterSubscription, _EventSubscription);\n  var _super = _createSuper(EmitterSubscription);\n  function EmitterSubscription(emitter, subscriber, listener, context) {\n    var _this;\n    _classCallCheck(this, EmitterSubscription);\n    _this = _super.call(this, subscriber);\n    _this.emitter = emitter;\n    _this.listener = listener;\n    _this.context = context;\n    return _this;\n  }\n  _createClass(EmitterSubscription, [{\n    key: \"remove\",\n    value: function remove() {\n      this.emitter.removeSubscription(this);\n    }\n  }]);\n  return EmitterSubscription;\n}(EventSubscription);\nmodule.exports = EmitterSubscription;","map":{"version":3,"names":["_classCallCheck","require","_createClass","_inherits","_possibleConstructorReturn","_getPrototypeOf","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","EventSubscription","EmitterSubscription","_EventSubscription","_super","emitter","subscriber","listener","context","_this","key","value","remove","removeSubscription","module","exports"],"sources":["D:/React-Native/Pharma/node_modules/react-native/Libraries/vendor/emitter/EmitterSubscription.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst EventSubscription = require('./EventSubscription');\n\nimport type EventEmitter from './EventEmitter';\nimport type EventSubscriptionVendor from './EventSubscriptionVendor';\n\n/**\n * EmitterSubscription represents a subscription with listener and context data.\n */\nclass EmitterSubscription extends EventSubscription {\n  emitter: EventEmitter;\n  listener: Function;\n  context: ?Object;\n\n  /**\n   * @param {EventEmitter} emitter - The event emitter that registered this\n   *   subscription\n   * @param {EventSubscriptionVendor} subscriber - The subscriber that controls\n   *   this subscription\n   * @param {function} listener - Function to invoke when the specified event is\n   *   emitted\n   * @param {*} context - Optional context object to use when invoking the\n   *   listener\n   */\n  constructor(\n    emitter: EventEmitter,\n    subscriber: EventSubscriptionVendor,\n    listener: Function,\n    context: ?Object,\n  ) {\n    super(subscriber);\n    this.emitter = emitter;\n    this.listener = listener;\n    this.context = context;\n  }\n\n  /**\n   * Removes this subscription from the emitter that registered it.\n   * Note: we're overriding the `remove()` method of EventSubscription here\n   * but deliberately not calling `super.remove()` as the responsibility\n   * for removing the subscription lies with the EventEmitter.\n   */\n  remove() {\n    this.emitter.removeSubscription(this);\n  }\n}\n\nmodule.exports = EmitterSubscription;\n"],"mappings":"AAUA,YAAY;;AAAC,IAAAA,eAAA,GAAAC,OAAA;AAAA,IAAAC,YAAA,GAAAD,OAAA;AAAA,IAAAE,SAAA,GAAAF,OAAA;AAAA,IAAAG,0BAAA,GAAAH,OAAA;AAAA,IAAAI,eAAA,GAAAJ,OAAA;AAAA,SAAAK,aAAAC,OAAA,QAAAC,yBAAA,GAAAC,yBAAA,oBAAAC,qBAAA,QAAAC,KAAA,GAAAN,eAAA,CAAAE,OAAA,GAAAK,MAAA,MAAAJ,yBAAA,QAAAK,SAAA,GAAAR,eAAA,OAAAS,WAAA,EAAAF,MAAA,GAAAG,OAAA,CAAAC,SAAA,CAAAL,KAAA,EAAAM,SAAA,EAAAJ,SAAA,YAAAD,MAAA,GAAAD,KAAA,CAAAO,KAAA,OAAAD,SAAA,YAAAb,0BAAA,OAAAQ,MAAA;AAAA,SAAAH,0BAAA,eAAAM,OAAA,qBAAAA,OAAA,CAAAC,SAAA,oBAAAD,OAAA,CAAAC,SAAA,CAAAG,IAAA,2BAAAC,KAAA,oCAAAC,OAAA,CAAAC,SAAA,CAAAC,OAAA,CAAAC,IAAA,CAAAT,OAAA,CAAAC,SAAA,CAAAK,OAAA,8CAAAI,CAAA;AAEb,IAAMC,iBAAiB,GAAGzB,OAAO,sBAAsB,CAAC;AAAC,IAQnD0B,mBAAmB,aAAAC,kBAAA;EAAAzB,SAAA,CAAAwB,mBAAA,EAAAC,kBAAA;EAAA,IAAAC,MAAA,GAAAvB,YAAA,CAAAqB,mBAAA;EAevB,SAAAA,oBACEG,OAAqB,EACrBC,UAAmC,EACnCC,QAAkB,EAClBC,OAAgB,EAChB;IAAA,IAAAC,KAAA;IAAAlC,eAAA,OAAA2B,mBAAA;IACAO,KAAA,GAAAL,MAAA,CAAAL,IAAA,OAAMO,UAAU;IAChBG,KAAA,CAAKJ,OAAO,GAAGA,OAAO;IACtBI,KAAA,CAAKF,QAAQ,GAAGA,QAAQ;IACxBE,KAAA,CAAKD,OAAO,GAAGA,OAAO;IAAC,OAAAC,KAAA;EACzB;EAAChC,YAAA,CAAAyB,mBAAA;IAAAQ,GAAA;IAAAC,KAAA,EAQD,SAAAC,OAAA,EAAS;MACP,IAAI,CAACP,OAAO,CAACQ,kBAAkB,CAAC,IAAI,CAAC;IACvC;EAAC;EAAA,OAAAX,mBAAA;AAAA,EAnC+BD,iBAAiB;AAsCnDa,MAAM,CAACC,OAAO,GAAGb,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}