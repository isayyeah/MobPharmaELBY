{"ast":null,"code":"'use strict';\n\nvar warning = require('fbjs/lib/warning');\nvar warnedKeys = {};\nfunction warnOnce(key, message) {\n  if (warnedKeys[key]) {\n    return;\n  }\n  warning(false, message);\n  warnedKeys[key] = true;\n}\nmodule.exports = warnOnce;","map":{"version":3,"names":["warning","require","warnedKeys","warnOnce","key","message","module","exports"],"sources":["D:/React-Native/Pharma/node_modules/react-native/Libraries/Utilities/warnOnce.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst warning = require('fbjs/lib/warning');\n\nconst warnedKeys: {[string]: boolean, ...} = {};\n\n/**\n * A simple function that prints a warning message once per session.\n *\n * @param {string} key - The key used to ensure the message is printed once.\n *                       This should be unique to the callsite.\n * @param {string} message - The message to print\n */\nfunction warnOnce(key: string, message: string) {\n  if (warnedKeys[key]) {\n    return;\n  }\n\n  warning(false, message);\n\n  warnedKeys[key] = true;\n}\n\nmodule.exports = warnOnce;\n"],"mappings":"AAUA,YAAY;;AAEZ,IAAMA,OAAO,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAE3C,IAAMC,UAAoC,GAAG,CAAC,CAAC;AAS/C,SAASC,QAAQA,CAACC,GAAW,EAAEC,OAAe,EAAE;EAC9C,IAAIH,UAAU,CAACE,GAAG,CAAC,EAAE;IACnB;EACF;EAEAJ,OAAO,CAAC,KAAK,EAAEK,OAAO,CAAC;EAEvBH,UAAU,CAACE,GAAG,CAAC,GAAG,IAAI;AACxB;AAEAE,MAAM,CAACC,OAAO,GAAGJ,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}