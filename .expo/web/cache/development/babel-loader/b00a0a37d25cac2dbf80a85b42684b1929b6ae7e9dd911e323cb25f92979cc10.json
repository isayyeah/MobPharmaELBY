{"ast":null,"code":"'use strict';\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar ErrorUtils = require(\"../vendor/core/ErrorUtils\");\nvar Systrace = require(\"../Performance/Systrace\");\nvar deepFreezeAndThrowOnMutationInDev = require(\"../Utilities/deepFreezeAndThrowOnMutationInDev\");\nvar invariant = require('invariant');\nvar stringifySafe = require(\"../Utilities/stringifySafe\").default;\nvar warnOnce = require(\"../Utilities/warnOnce\");\nvar TO_JS = 0;\nvar TO_NATIVE = 1;\nvar MODULE_IDS = 0;\nvar METHOD_IDS = 1;\nvar PARAMS = 2;\nvar MIN_TIME_BETWEEN_FLUSHES_MS = 5;\nvar TRACE_TAG_REACT_APPS = 1 << 17;\nvar DEBUG_INFO_LIMIT = 32;\nvar MessageQueue = function () {\n  function MessageQueue() {\n    _classCallCheck(this, MessageQueue);\n    this._lazyCallableModules = {};\n    this._queue = [[], [], [], 0];\n    this._successCallbacks = new Map();\n    this._failureCallbacks = new Map();\n    this._callID = 0;\n    this._lastFlush = 0;\n    this._eventLoopStartTime = Date.now();\n    this._immediatesCallback = null;\n    if (__DEV__) {\n      this._debugInfo = {};\n      this._remoteModuleTable = {};\n      this._remoteMethodTable = {};\n    }\n    this.callFunctionReturnFlushedQueue = this.callFunctionReturnFlushedQueue.bind(this);\n    this.flushedQueue = this.flushedQueue.bind(this);\n    this.invokeCallbackAndReturnFlushedQueue = this.invokeCallbackAndReturnFlushedQueue.bind(this);\n  }\n  _createClass(MessageQueue, [{\n    key: \"callFunctionReturnFlushedQueue\",\n    value: function callFunctionReturnFlushedQueue(module, method, args) {\n      var _this = this;\n      this.__guard(function () {\n        _this.__callFunction(module, method, args);\n      });\n      return this.flushedQueue();\n    }\n  }, {\n    key: \"callFunctionReturnResultAndFlushedQueue\",\n    value: function callFunctionReturnResultAndFlushedQueue(module, method, args) {}\n  }, {\n    key: \"invokeCallbackAndReturnFlushedQueue\",\n    value: function invokeCallbackAndReturnFlushedQueue(cbID, args) {\n      var _this2 = this;\n      this.__guard(function () {\n        _this2.__invokeCallback(cbID, args);\n      });\n      return this.flushedQueue();\n    }\n  }, {\n    key: \"flushedQueue\",\n    value: function flushedQueue() {\n      var _this3 = this;\n      this.__guard(function () {\n        _this3.__callImmediates();\n      });\n      var queue = this._queue;\n      this._queue = [[], [], [], this._callID];\n      return queue[0].length ? queue : null;\n    }\n  }, {\n    key: \"getEventLoopRunningTime\",\n    value: function getEventLoopRunningTime() {\n      return Date.now() - this._eventLoopStartTime;\n    }\n  }, {\n    key: \"registerCallableModule\",\n    value: function registerCallableModule(name, module) {\n      this._lazyCallableModules[name] = function () {\n        return module;\n      };\n    }\n  }, {\n    key: \"registerLazyCallableModule\",\n    value: function registerLazyCallableModule(name, factory) {\n      var module;\n      var getValue = factory;\n      this._lazyCallableModules[name] = function () {\n        if (getValue) {\n          module = getValue();\n          getValue = null;\n        }\n        return module;\n      };\n    }\n  }, {\n    key: \"getCallableModule\",\n    value: function getCallableModule(name) {\n      var getValue = this._lazyCallableModules[name];\n      return getValue ? getValue() : null;\n    }\n  }, {\n    key: \"callNativeSyncHook\",\n    value: function callNativeSyncHook(moduleID, methodID, params, onFail, onSucc) {\n      if (__DEV__) {\n        invariant(global.nativeCallSyncHook, 'Calling synchronous methods on native ' + 'modules is not supported in Chrome.\\n\\n Consider providing alternative ' + 'methods to expose this method in debug mode, e.g. by exposing constants ' + 'ahead-of-time.');\n      }\n      this.processCallbacks(moduleID, methodID, params, onFail, onSucc);\n      return global.nativeCallSyncHook(moduleID, methodID, params);\n    }\n  }, {\n    key: \"processCallbacks\",\n    value: function processCallbacks(moduleID, methodID, params, onFail, onSucc) {\n      var _this4 = this;\n      if (onFail || onSucc) {\n        if (__DEV__) {\n          this._debugInfo[this._callID] = [moduleID, methodID];\n          if (this._callID > DEBUG_INFO_LIMIT) {\n            delete this._debugInfo[this._callID - DEBUG_INFO_LIMIT];\n          }\n          if (this._successCallbacks.size > 500) {\n            var info = {};\n            this._successCallbacks.forEach(function (_, callID) {\n              var debug = _this4._debugInfo[callID];\n              var module = debug && _this4._remoteModuleTable[debug[0]];\n              var method = debug && _this4._remoteMethodTable[debug[0]][debug[1]];\n              info[callID] = {\n                module: module,\n                method: method\n              };\n            });\n            warnOnce('excessive-number-of-pending-callbacks', \"Please report: Excessive number of pending callbacks: \" + this._successCallbacks.size + \". Some pending callbacks that might have leaked by never being called from native code: \" + stringifySafe(info));\n          }\n        }\n        onFail && params.push(this._callID << 1);\n        onSucc && params.push(this._callID << 1 | 1);\n        this._successCallbacks.set(this._callID, onSucc);\n        this._failureCallbacks.set(this._callID, onFail);\n      }\n      if (__DEV__) {\n        global.nativeTraceBeginAsyncFlow && global.nativeTraceBeginAsyncFlow(TRACE_TAG_REACT_APPS, 'native', this._callID);\n      }\n      this._callID++;\n    }\n  }, {\n    key: \"enqueueNativeCall\",\n    value: function enqueueNativeCall(moduleID, methodID, params, onFail, onSucc) {\n      this.processCallbacks(moduleID, methodID, params, onFail, onSucc);\n      this._queue[MODULE_IDS].push(moduleID);\n      this._queue[METHOD_IDS].push(methodID);\n      if (__DEV__) {\n        var isValidArgument = function isValidArgument(val) {\n          var t = typeof val;\n          if (t === 'undefined' || t === 'null' || t === 'boolean' || t === 'string') {\n            return true;\n          }\n          if (t === 'number') {\n            return isFinite(val);\n          }\n          if (t === 'function' || t !== 'object') {\n            return false;\n          }\n          if (Array.isArray(val)) {\n            return val.every(isValidArgument);\n          }\n          for (var k in val) {\n            if (typeof val[k] !== 'function' && !isValidArgument(val[k])) {\n              return false;\n            }\n          }\n          return true;\n        };\n        var replacer = function replacer(key, val) {\n          var t = typeof val;\n          if (t === 'function') {\n            return '<<Function ' + val.name + '>>';\n          } else if (t === 'number' && !isFinite(val)) {\n            return '<<' + val.toString() + '>>';\n          } else {\n            return val;\n          }\n        };\n        invariant(isValidArgument(params), '%s is not usable as a native method argument', JSON.stringify(params, replacer));\n        deepFreezeAndThrowOnMutationInDev(params);\n      }\n      this._queue[PARAMS].push(params);\n      var now = Date.now();\n      if (global.nativeFlushQueueImmediate && now - this._lastFlush >= MIN_TIME_BETWEEN_FLUSHES_MS) {\n        var queue = this._queue;\n        this._queue = [[], [], [], this._callID];\n        this._lastFlush = now;\n        global.nativeFlushQueueImmediate(queue);\n      }\n      Systrace.counterEvent('pending_js_to_native_queue', this._queue[0].length);\n      if (__DEV__ && this.__spy && isFinite(moduleID)) {\n        this.__spy({\n          type: TO_NATIVE,\n          module: this._remoteModuleTable[moduleID],\n          method: this._remoteMethodTable[moduleID][methodID],\n          args: params\n        });\n      } else if (this.__spy) {\n        this.__spy({\n          type: TO_NATIVE,\n          module: moduleID + '',\n          method: methodID,\n          args: params\n        });\n      }\n    }\n  }, {\n    key: \"createDebugLookup\",\n    value: function createDebugLookup(moduleID, name, methods) {\n      if (__DEV__) {\n        this._remoteModuleTable[moduleID] = name;\n        this._remoteMethodTable[moduleID] = methods || [];\n      }\n    }\n  }, {\n    key: \"setImmediatesCallback\",\n    value: function setImmediatesCallback(fn) {\n      this._immediatesCallback = fn;\n    }\n  }, {\n    key: \"__guard\",\n    value: function __guard(fn) {\n      if (this.__shouldPauseOnThrow()) {\n        fn();\n      } else {\n        try {\n          fn();\n        } catch (error) {\n          ErrorUtils.reportFatalError(error);\n        }\n      }\n    }\n  }, {\n    key: \"__shouldPauseOnThrow\",\n    value: function __shouldPauseOnThrow() {\n      return typeof DebuggerInternal !== 'undefined' && DebuggerInternal.shouldPauseOnThrow === true;\n    }\n  }, {\n    key: \"__callImmediates\",\n    value: function __callImmediates() {\n      Systrace.beginEvent('JSTimers.callImmediates()');\n      if (this._immediatesCallback != null) {\n        this._immediatesCallback();\n      }\n      Systrace.endEvent();\n    }\n  }, {\n    key: \"__callFunction\",\n    value: function __callFunction(module, method, args) {\n      this._lastFlush = Date.now();\n      this._eventLoopStartTime = this._lastFlush;\n      if (__DEV__ || this.__spy) {\n        Systrace.beginEvent(module + \".\" + method + \"(\" + stringifySafe(args) + \")\");\n      } else {\n        Systrace.beginEvent(module + \".\" + method + \"(...)\");\n      }\n      if (this.__spy) {\n        this.__spy({\n          type: TO_JS,\n          module: module,\n          method: method,\n          args: args\n        });\n      }\n      var moduleMethods = this.getCallableModule(module);\n      invariant(!!moduleMethods, 'Module %s is not a registered callable module (calling %s)', module, method);\n      invariant(!!moduleMethods[method], 'Method %s does not exist on module %s', method, module);\n      moduleMethods[method].apply(moduleMethods, args);\n      Systrace.endEvent();\n    }\n  }, {\n    key: \"__invokeCallback\",\n    value: function __invokeCallback(cbID, args) {\n      this._lastFlush = Date.now();\n      this._eventLoopStartTime = this._lastFlush;\n      var callID = cbID >>> 1;\n      var isSuccess = cbID & 1;\n      var callback = isSuccess ? this._successCallbacks.get(callID) : this._failureCallbacks.get(callID);\n      if (__DEV__) {\n        var debug = this._debugInfo[callID];\n        var _module = debug && this._remoteModuleTable[debug[0]];\n        var method = debug && this._remoteMethodTable[debug[0]][debug[1]];\n        invariant(callback, \"No callback found with cbID \" + cbID + \" and callID \" + callID + \" for \" + (method ? \" \" + _module + \".\" + method + \" - most likely the callback was already invoked\" : \"module \" + (_module || '<unknown>')) + (\". Args: '\" + stringifySafe(args) + \"'\"));\n        var profileName = debug ? '<callback for ' + _module + '.' + method + '>' : cbID;\n        if (callback && this.__spy) {\n          this.__spy({\n            type: TO_JS,\n            module: null,\n            method: profileName,\n            args: args\n          });\n        }\n        Systrace.beginEvent(\"MessageQueue.invokeCallback(\" + profileName + \", \" + stringifySafe(args) + \")\");\n      }\n      if (!callback) {\n        return;\n      }\n      this._successCallbacks.delete(callID);\n      this._failureCallbacks.delete(callID);\n      callback.apply(void 0, _toConsumableArray(args));\n      if (__DEV__) {\n        Systrace.endEvent();\n      }\n    }\n  }], [{\n    key: \"spy\",\n    value: function spy(spyOrToggle) {\n      if (spyOrToggle === true) {\n        MessageQueue.prototype.__spy = function (info) {\n          console.log((info.type === TO_JS ? 'N->JS' : 'JS->N') + \" : \" + (\"\" + (info.module ? info.module + '.' : '') + info.method) + (\"(\" + JSON.stringify(info.args) + \")\"));\n        };\n      } else if (spyOrToggle === false) {\n        MessageQueue.prototype.__spy = null;\n      } else {\n        MessageQueue.prototype.__spy = spyOrToggle;\n      }\n    }\n  }]);\n  return MessageQueue;\n}();\nmodule.exports = MessageQueue;","map":{"version":3,"names":["_toConsumableArray","require","_classCallCheck","_createClass","ErrorUtils","Systrace","deepFreezeAndThrowOnMutationInDev","invariant","stringifySafe","default","warnOnce","TO_JS","TO_NATIVE","MODULE_IDS","METHOD_IDS","PARAMS","MIN_TIME_BETWEEN_FLUSHES_MS","TRACE_TAG_REACT_APPS","DEBUG_INFO_LIMIT","MessageQueue","_lazyCallableModules","_queue","_successCallbacks","Map","_failureCallbacks","_callID","_lastFlush","_eventLoopStartTime","Date","now","_immediatesCallback","__DEV__","_debugInfo","_remoteModuleTable","_remoteMethodTable","callFunctionReturnFlushedQueue","bind","flushedQueue","invokeCallbackAndReturnFlushedQueue","key","value","module","method","args","_this","__guard","__callFunction","callFunctionReturnResultAndFlushedQueue","cbID","_this2","__invokeCallback","_this3","__callImmediates","queue","length","getEventLoopRunningTime","registerCallableModule","name","registerLazyCallableModule","factory","getValue","getCallableModule","callNativeSyncHook","moduleID","methodID","params","onFail","onSucc","global","nativeCallSyncHook","processCallbacks","_this4","size","info","forEach","_","callID","debug","push","set","nativeTraceBeginAsyncFlow","enqueueNativeCall","isValidArgument","val","t","isFinite","Array","isArray","every","k","replacer","toString","JSON","stringify","nativeFlushQueueImmediate","counterEvent","__spy","type","createDebugLookup","methods","setImmediatesCallback","fn","__shouldPauseOnThrow","error","reportFatalError","DebuggerInternal","shouldPauseOnThrow","beginEvent","endEvent","moduleMethods","apply","isSuccess","callback","get","profileName","delete","spy","spyOrToggle","prototype","console","log","exports"],"sources":["D:/React-Native/Pharma/node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst ErrorUtils = require('../vendor/core/ErrorUtils');\nconst Systrace = require('../Performance/Systrace');\n\nconst deepFreezeAndThrowOnMutationInDev = require('../Utilities/deepFreezeAndThrowOnMutationInDev');\nconst invariant = require('invariant');\nconst stringifySafe = require('../Utilities/stringifySafe').default;\nconst warnOnce = require('../Utilities/warnOnce');\n\nexport type SpyData = {\n  type: number,\n  module: ?string,\n  method: string | number,\n  args: any[],\n  ...\n};\n\nconst TO_JS = 0;\nconst TO_NATIVE = 1;\n\nconst MODULE_IDS = 0;\nconst METHOD_IDS = 1;\nconst PARAMS = 2;\nconst MIN_TIME_BETWEEN_FLUSHES_MS = 5;\n\n// eslint-disable-next-line no-bitwise\nconst TRACE_TAG_REACT_APPS = 1 << 17;\n\nconst DEBUG_INFO_LIMIT = 32;\n\nclass MessageQueue {\n  _lazyCallableModules: {[key: string]: (void) => Object, ...};\n  _queue: [number[], number[], any[], number];\n  _successCallbacks: Map<number, ?Function>;\n  _failureCallbacks: Map<number, ?Function>;\n  _callID: number;\n  _lastFlush: number;\n  _eventLoopStartTime: number;\n  _immediatesCallback: ?() => void;\n\n  _debugInfo: {[number]: [number, number], ...};\n  _remoteModuleTable: {[number]: string, ...};\n  _remoteMethodTable: {[number]: $ReadOnlyArray<string>, ...};\n\n  __spy: ?(data: SpyData) => void;\n\n  constructor() {\n    this._lazyCallableModules = {};\n    this._queue = [[], [], [], 0];\n    this._successCallbacks = new Map();\n    this._failureCallbacks = new Map();\n    this._callID = 0;\n    this._lastFlush = 0;\n    this._eventLoopStartTime = Date.now();\n    this._immediatesCallback = null;\n\n    if (__DEV__) {\n      this._debugInfo = {};\n      this._remoteModuleTable = {};\n      this._remoteMethodTable = {};\n    }\n\n    (this: any).callFunctionReturnFlushedQueue = this.callFunctionReturnFlushedQueue.bind(\n      this,\n    );\n    (this: any).flushedQueue = this.flushedQueue.bind(this);\n    (this: any).invokeCallbackAndReturnFlushedQueue = this.invokeCallbackAndReturnFlushedQueue.bind(\n      this,\n    );\n  }\n\n  /**\n   * Public APIs\n   */\n\n  static spy(spyOrToggle: boolean | ((data: SpyData) => void)) {\n    if (spyOrToggle === true) {\n      MessageQueue.prototype.__spy = info => {\n        console.log(\n          `${info.type === TO_JS ? 'N->JS' : 'JS->N'} : ` +\n            `${info.module ? info.module + '.' : ''}${info.method}` +\n            `(${JSON.stringify(info.args)})`,\n        );\n      };\n    } else if (spyOrToggle === false) {\n      MessageQueue.prototype.__spy = null;\n    } else {\n      MessageQueue.prototype.__spy = spyOrToggle;\n    }\n  }\n\n  callFunctionReturnFlushedQueue(\n    module: string,\n    method: string,\n    args: any[],\n  ): null | [Array<number>, Array<number>, Array<any>, number] {\n    this.__guard(() => {\n      this.__callFunction(module, method, args);\n    });\n\n    return this.flushedQueue();\n  }\n\n  // Deprecated. T61834641: Remove me once native clients have updated\n  callFunctionReturnResultAndFlushedQueue(\n    module: string,\n    method: string,\n    args: any[],\n  ): void {}\n\n  invokeCallbackAndReturnFlushedQueue(\n    cbID: number,\n    args: any[],\n  ): null | [Array<number>, Array<number>, Array<any>, number] {\n    this.__guard(() => {\n      this.__invokeCallback(cbID, args);\n    });\n\n    return this.flushedQueue();\n  }\n\n  flushedQueue(): null | [Array<number>, Array<number>, Array<any>, number] {\n    this.__guard(() => {\n      this.__callImmediates();\n    });\n\n    const queue = this._queue;\n    this._queue = [[], [], [], this._callID];\n    return queue[0].length ? queue : null;\n  }\n\n  getEventLoopRunningTime(): number {\n    return Date.now() - this._eventLoopStartTime;\n  }\n\n  registerCallableModule(name: string, module: Object) {\n    this._lazyCallableModules[name] = () => module;\n  }\n\n  registerLazyCallableModule(name: string, factory: void => Object) {\n    let module: Object;\n    let getValue: ?(void) => Object = factory;\n    this._lazyCallableModules[name] = () => {\n      if (getValue) {\n        module = getValue();\n        getValue = null;\n      }\n      return module;\n    };\n  }\n\n  getCallableModule(name: string): any | null {\n    const getValue = this._lazyCallableModules[name];\n    return getValue ? getValue() : null;\n  }\n\n  callNativeSyncHook(\n    moduleID: number,\n    methodID: number,\n    params: any[],\n    onFail: ?Function,\n    onSucc: ?Function,\n  ): any {\n    if (__DEV__) {\n      invariant(\n        global.nativeCallSyncHook,\n        'Calling synchronous methods on native ' +\n          'modules is not supported in Chrome.\\n\\n Consider providing alternative ' +\n          'methods to expose this method in debug mode, e.g. by exposing constants ' +\n          'ahead-of-time.',\n      );\n    }\n    this.processCallbacks(moduleID, methodID, params, onFail, onSucc);\n    return global.nativeCallSyncHook(moduleID, methodID, params);\n  }\n\n  processCallbacks(\n    moduleID: number,\n    methodID: number,\n    params: any[],\n    onFail: ?Function,\n    onSucc: ?Function,\n  ) {\n    if (onFail || onSucc) {\n      if (__DEV__) {\n        this._debugInfo[this._callID] = [moduleID, methodID];\n        if (this._callID > DEBUG_INFO_LIMIT) {\n          delete this._debugInfo[this._callID - DEBUG_INFO_LIMIT];\n        }\n        if (this._successCallbacks.size > 500) {\n          const info = {};\n          this._successCallbacks.forEach((_, callID) => {\n            const debug = this._debugInfo[callID];\n            const module = debug && this._remoteModuleTable[debug[0]];\n            const method = debug && this._remoteMethodTable[debug[0]][debug[1]];\n            info[callID] = {module, method};\n          });\n          warnOnce(\n            'excessive-number-of-pending-callbacks',\n            `Please report: Excessive number of pending callbacks: ${\n              this._successCallbacks.size\n            }. Some pending callbacks that might have leaked by never being called from native code: ${stringifySafe(\n              info,\n            )}`,\n          );\n        }\n      }\n      // Encode callIDs into pairs of callback identifiers by shifting left and using the rightmost bit\n      // to indicate fail (0) or success (1)\n      // eslint-disable-next-line no-bitwise\n      onFail && params.push(this._callID << 1);\n      // eslint-disable-next-line no-bitwise\n      onSucc && params.push((this._callID << 1) | 1);\n      this._successCallbacks.set(this._callID, onSucc);\n      this._failureCallbacks.set(this._callID, onFail);\n    }\n    if (__DEV__) {\n      global.nativeTraceBeginAsyncFlow &&\n        global.nativeTraceBeginAsyncFlow(\n          TRACE_TAG_REACT_APPS,\n          'native',\n          this._callID,\n        );\n    }\n    this._callID++;\n  }\n\n  enqueueNativeCall(\n    moduleID: number,\n    methodID: number,\n    params: any[],\n    onFail: ?Function,\n    onSucc: ?Function,\n  ) {\n    this.processCallbacks(moduleID, methodID, params, onFail, onSucc);\n\n    this._queue[MODULE_IDS].push(moduleID);\n    this._queue[METHOD_IDS].push(methodID);\n\n    if (__DEV__) {\n      // Validate that parameters passed over the bridge are\n      // folly-convertible.  As a special case, if a prop value is a\n      // function it is permitted here, and special-cased in the\n      // conversion.\n      const isValidArgument = val => {\n        const t = typeof val;\n        if (\n          t === 'undefined' ||\n          t === 'null' ||\n          t === 'boolean' ||\n          t === 'string'\n        ) {\n          return true;\n        }\n        if (t === 'number') {\n          return isFinite(val);\n        }\n        if (t === 'function' || t !== 'object') {\n          return false;\n        }\n        if (Array.isArray(val)) {\n          return val.every(isValidArgument);\n        }\n        for (const k in val) {\n          if (typeof val[k] !== 'function' && !isValidArgument(val[k])) {\n            return false;\n          }\n        }\n        return true;\n      };\n\n      // Replacement allows normally non-JSON-convertible values to be\n      // seen.  There is ambiguity with string values, but in context,\n      // it should at least be a strong hint.\n      const replacer = (key, val) => {\n        const t = typeof val;\n        if (t === 'function') {\n          return '<<Function ' + val.name + '>>';\n        } else if (t === 'number' && !isFinite(val)) {\n          return '<<' + val.toString() + '>>';\n        } else {\n          return val;\n        }\n      };\n\n      // Note that JSON.stringify\n      invariant(\n        isValidArgument(params),\n        '%s is not usable as a native method argument',\n        JSON.stringify(params, replacer),\n      );\n\n      // The params object should not be mutated after being queued\n      deepFreezeAndThrowOnMutationInDev((params: any));\n    }\n    this._queue[PARAMS].push(params);\n\n    const now = Date.now();\n    if (\n      global.nativeFlushQueueImmediate &&\n      now - this._lastFlush >= MIN_TIME_BETWEEN_FLUSHES_MS\n    ) {\n      const queue = this._queue;\n      this._queue = [[], [], [], this._callID];\n      this._lastFlush = now;\n      global.nativeFlushQueueImmediate(queue);\n    }\n    Systrace.counterEvent('pending_js_to_native_queue', this._queue[0].length);\n    if (__DEV__ && this.__spy && isFinite(moduleID)) {\n      this.__spy({\n        type: TO_NATIVE,\n        module: this._remoteModuleTable[moduleID],\n        method: this._remoteMethodTable[moduleID][methodID],\n        args: params,\n      });\n    } else if (this.__spy) {\n      this.__spy({\n        type: TO_NATIVE,\n        module: moduleID + '',\n        method: methodID,\n        args: params,\n      });\n    }\n  }\n\n  createDebugLookup(\n    moduleID: number,\n    name: string,\n    methods: ?$ReadOnlyArray<string>,\n  ) {\n    if (__DEV__) {\n      this._remoteModuleTable[moduleID] = name;\n      this._remoteMethodTable[moduleID] = methods || [];\n    }\n  }\n\n  // For JSTimers to register its callback. Otherwise a circular dependency\n  // between modules is introduced. Note that only one callback may be\n  // registered at a time.\n  setImmediatesCallback(fn: () => void) {\n    this._immediatesCallback = fn;\n  }\n\n  /**\n   * Private methods\n   */\n\n  __guard(fn: () => void) {\n    if (this.__shouldPauseOnThrow()) {\n      fn();\n    } else {\n      try {\n        fn();\n      } catch (error) {\n        ErrorUtils.reportFatalError(error);\n      }\n    }\n  }\n\n  // MessageQueue installs a global handler to catch all exceptions where JS users can register their own behavior\n  // This handler makes all exceptions to be propagated from inside MessageQueue rather than by the VM at their origin\n  // This makes stacktraces to be placed at MessageQueue rather than at where they were launched\n  // The parameter DebuggerInternal.shouldPauseOnThrow is used to check before catching all exceptions and\n  // can be configured by the VM or any Inspector\n  __shouldPauseOnThrow(): boolean {\n    return (\n      // $FlowFixMe\n      typeof DebuggerInternal !== 'undefined' &&\n      DebuggerInternal.shouldPauseOnThrow === true // eslint-disable-line no-undef\n    );\n  }\n\n  __callImmediates() {\n    Systrace.beginEvent('JSTimers.callImmediates()');\n    if (this._immediatesCallback != null) {\n      this._immediatesCallback();\n    }\n    Systrace.endEvent();\n  }\n\n  __callFunction(module: string, method: string, args: any[]): void {\n    this._lastFlush = Date.now();\n    this._eventLoopStartTime = this._lastFlush;\n    if (__DEV__ || this.__spy) {\n      Systrace.beginEvent(`${module}.${method}(${stringifySafe(args)})`);\n    } else {\n      Systrace.beginEvent(`${module}.${method}(...)`);\n    }\n    if (this.__spy) {\n      this.__spy({type: TO_JS, module, method, args});\n    }\n    const moduleMethods = this.getCallableModule(module);\n    invariant(\n      !!moduleMethods,\n      'Module %s is not a registered callable module (calling %s)',\n      module,\n      method,\n    );\n    invariant(\n      !!moduleMethods[method],\n      'Method %s does not exist on module %s',\n      method,\n      module,\n    );\n    moduleMethods[method].apply(moduleMethods, args);\n    Systrace.endEvent();\n  }\n\n  __invokeCallback(cbID: number, args: any[]) {\n    this._lastFlush = Date.now();\n    this._eventLoopStartTime = this._lastFlush;\n\n    // The rightmost bit of cbID indicates fail (0) or success (1), the other bits are the callID shifted left.\n    // eslint-disable-next-line no-bitwise\n    const callID = cbID >>> 1;\n    // eslint-disable-next-line no-bitwise\n    const isSuccess = cbID & 1;\n    const callback = isSuccess\n      ? this._successCallbacks.get(callID)\n      : this._failureCallbacks.get(callID);\n\n    if (__DEV__) {\n      const debug = this._debugInfo[callID];\n      const module = debug && this._remoteModuleTable[debug[0]];\n      const method = debug && this._remoteMethodTable[debug[0]][debug[1]];\n      invariant(\n        callback,\n        `No callback found with cbID ${cbID} and callID ${callID} for ` +\n          (method\n            ? ` ${module}.${method} - most likely the callback was already invoked`\n            : `module ${module || '<unknown>'}`) +\n          `. Args: '${stringifySafe(args)}'`,\n      );\n      const profileName = debug\n        ? '<callback for ' + module + '.' + method + '>'\n        : cbID;\n      if (callback && this.__spy) {\n        this.__spy({type: TO_JS, module: null, method: profileName, args});\n      }\n      Systrace.beginEvent(\n        `MessageQueue.invokeCallback(${profileName}, ${stringifySafe(args)})`,\n      );\n    }\n\n    if (!callback) {\n      return;\n    }\n\n    this._successCallbacks.delete(callID);\n    this._failureCallbacks.delete(callID);\n    callback(...args);\n\n    if (__DEV__) {\n      Systrace.endEvent();\n    }\n  }\n}\n\nmodule.exports = MessageQueue;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}