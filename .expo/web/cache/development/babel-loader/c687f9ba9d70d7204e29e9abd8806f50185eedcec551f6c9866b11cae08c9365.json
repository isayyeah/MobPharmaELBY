{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"D:\\\\React-Native\\\\Pharma\\\\navigation\\\\screens\\\\DetailsScreen.js\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport MapView, { Marker } from 'react-native-maps';\nvar DetailsScreen = function DetailsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentLocation = _useState2[0],\n    setCurrentLocation = _useState2[1];\n  useEffect(function () {\n    getCurrentLocation();\n  }, []);\n  var getCurrentLocation = function getCurrentLocation() {\n    setCurrentLocation({\n      latitude: 37.78825,\n      longitude: -122.4324\n    });\n  };\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, currentLocation && React.createElement(MapView, {\n    style: styles.map,\n    initialRegion: {\n      latitude: currentLocation.latitude,\n      longitude: currentLocation.longitude,\n      latitudeDelta: 0.0922,\n      longitudeDelta: 0.0421\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, React.createElement(Marker, {\n    coordinate: {\n      latitude: currentLocation.latitude,\n      longitude: currentLocation.longitude\n    },\n    title: \"My Location\",\n    description: \"This is my current location\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.backButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    onPress: function onPress() {\n      return navigation.navigate('Home');\n    },\n    style: styles.backButtonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Details Screen\")));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  map: {\n    flex: 1\n  },\n  backButton: {\n    position: 'absolute',\n    top: 20,\n    left: 20,\n    zIndex: 1\n  },\n  backButtonText: {\n    fontSize: 26,\n    fontWeight: 'bold',\n    color: 'white'\n  }\n});\nexport default DetailsScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","MapView","Marker","DetailsScreen","_ref","navigation","_useState","_useState2","_slicedToArray","currentLocation","setCurrentLocation","getCurrentLocation","latitude","longitude","createElement","style","styles","container","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","initialRegion","latitudeDelta","longitudeDelta","coordinate","title","description","backButton","onPress","navigate","backButtonText","create","flex","position","top","left","zIndex","fontSize","fontWeight","color"],"sources":["D:/React-Native/Pharma/navigation/screens/DetailsScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\nimport MapView, { Marker } from 'react-native-maps';\r\n\r\nconst DetailsScreen = ({ navigation }) => {\r\n  const [currentLocation, setCurrentLocation] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch the current location or use any other method to obtain it\r\n    // and update the 'currentLocation' state variable\r\n    getCurrentLocation();\r\n  }, []);\r\n\r\n  const getCurrentLocation = () => {\r\n    // Implement the logic to obtain the current location\r\n    // and update the 'currentLocation' state variable\r\n    // For simplicity, let's assume the location is obtained successfully\r\n    setCurrentLocation({ latitude: 37.78825, longitude: -122.4324 });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {currentLocation && (\r\n        <MapView\r\n          style={styles.map}\r\n          initialRegion={{\r\n            latitude: currentLocation.latitude,\r\n            longitude: currentLocation.longitude,\r\n            latitudeDelta: 0.0922,\r\n            longitudeDelta: 0.0421,\r\n          }}\r\n        >\r\n          <Marker\r\n            coordinate={{\r\n              latitude: currentLocation.latitude,\r\n              longitude: currentLocation.longitude,\r\n            }}\r\n            title=\"My Location\"\r\n            description=\"This is my current location\"\r\n          />\r\n        </MapView>\r\n      )}\r\n      <View style={styles.backButton}>\r\n        <Text\r\n          onPress={() => navigation.navigate('Home')}\r\n          style={styles.backButtonText}\r\n        >\r\n          Details Screen\r\n        </Text>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  map: {\r\n    flex: 1,\r\n  },\r\n  backButton: {\r\n    position: 'absolute',\r\n    top: 20,\r\n    left: 20,\r\n    zIndex: 1,\r\n  },\r\n  backButtonText: {\r\n    fontSize: 26,\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n  },\r\n});\r\n\r\nexport default DetailsScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}